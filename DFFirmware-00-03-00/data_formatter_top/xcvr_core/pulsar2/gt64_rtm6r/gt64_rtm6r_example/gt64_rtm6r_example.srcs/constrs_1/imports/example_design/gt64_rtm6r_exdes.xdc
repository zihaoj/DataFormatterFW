################################################################################
##   ____  ____
##  /   /\/   /
## /___/  \  /    Vendor: Xilinx
## \   \   \/     Version : 3.3
##  \   \         Application : 7 Series FPGAs Transceivers Wizard
##  /   /         Filename : gt64_rtm6r_exdes.xdc
## /___/   /\     
## \   \  /  \ 
##  \___\/\___\
##
##
## USER CONSTRAINTS FILE FOR MGT WRAPPER EXAMPLE DESIGN
## Generated by Xilinx 7 Series FPGAs Transceivers Wizard
##
## Device:  xc7vx690t
## Package: ffg1927
##
## (c) Copyright 2010-2012 Xilinx, Inc. All rights reserved.
##
## This file contains confidential and proprietary information
## of Xilinx, Inc. and is protected under U.S. and
## international copyright and other intellectual property
## laws.
##
## DISCLAIMER
## This disclaimer is not a license and does not grant any
## rights to the materials distributed herewith. Except as
## otherwise provided in a valid license issued to you by
## Xilinx, and to the maximum extent permitted by applicable
## law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
## WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
## AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
## BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
## INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
## (2) Xilinx shall not be liable (whether in contract or tort,
## including negligence, or under any other theory of
## liability) for any loss or damage of any kind or nature
## related to, arising under or in connection with these
## materials, including for any direct, or any indirect,
## special, incidental, or consequential loss or damage
## (including loss of data, profits, goodwill, or any type of
## loss or damage suffered as a result of any action brought
## by a third party) even if such damage or loss was
## reasonably foreseeable or Xilinx had been advised of the
## possibility of the same.
##
## CRITICAL APPLICATIONS
## Xilinx products are not designed or intended to be fail-
## safe, or for use in any application requiring fail-safe
## performance, such as life-support or safety devices or
## systems, Class III medical devices, nuclear facilities,
## applications related to the deployment of airbags, or any
## other applications that could lead to death, personal
## injury, or severe property or environmental damage
## (individually and collectively, "Critical
## Applications"). Customer assumes the sole risk and
## liability of any use of Xilinx products in Critical
## Applications, subject only to applicable laws and
## regulations governing limitations on product liability.
## 
## THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
## PART OF THIS FILE AT ALL TIMES.


################################## Clock Constraints ##########################


####################### GT reference clock constraints #########################
 

    create_clock -period 5.0 [get_ports Q0_CLK0_GTREFCLK_PAD_P_IN]


#create_clock -name GT0_GTREFCLK0_IN -period 5.0 [get_pins -hier -filter {name=~*gt0_gt64_rtm6r_i*gthe2_i*GTREFCLK0}]
#create_clock -name GT1_GTREFCLK0_IN -period 5.0 [get_pins -hier -filter {name=~*gt1_gt64_rtm6r_i*gthe2_i*GTREFCLK0}]
#create_clock -name GT2_GTREFCLK0_IN -period 5.0 [get_pins -hier -filter {name=~*gt2_gt64_rtm6r_i*gthe2_i*GTREFCLK0}]
#create_clock -name GT3_GTREFCLK0_IN -period 5.0 [get_pins -hier -filter {name=~*gt3_gt64_rtm6r_i*gthe2_i*GTREFCLK0}]
#create_clock -name GT4_GTREFCLK0_IN -period 5.0 [get_pins -hier -filter {name=~*gt4_gt64_rtm6r_i*gthe2_i*GTREFCLK0}]
#create_clock -name GT5_GTREFCLK0_IN -period 5.0 [get_pins -hier -filter {name=~*gt5_gt64_rtm6r_i*gthe2_i*GTREFCLK0}]


#create_clock -name drpclk_in_i -period 20.0 [get_pins -hier -filter {name=~*gt64_rtm6r_support_i*gt_usrclk_source*DRP_CLK_BUFG*I}]

create_clock -name drpclk_in_i -period 20.0 [get_ports DRP_CLK_IN_P]

#set_false_path -from drpclk_in_i -to [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt0_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]]
#set_false_path -from [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt0_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]] -to drpclk_in_i

#set_false_path -from drpclk_in_i -to [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt1_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]]
#set_false_path -from [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt1_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]] -to drpclk_in_i

#set_false_path -from drpclk_in_i -to [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt2_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]]
#set_false_path -from [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt2_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]] -to drpclk_in_i

#set_false_path -from drpclk_in_i -to [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt3_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]]
#set_false_path -from [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt3_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]] -to drpclk_in_i

#set_false_path -from drpclk_in_i -to [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt4_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]]
#set_false_path -from [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt4_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]] -to drpclk_in_i

#set_false_path -from drpclk_in_i -to [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt5_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]]
#set_false_path -from [get_clocks -include_generated_clocks -of_objects [get_pins -hier -filter {name=~*gt5_gt64_rtm6r_i*gthe2_i*TXOUTCLK}]] -to drpclk_in_i

# User Clock Constraints
create_clock -name gt0_txusrclk_i -period 6.25 [get_pins -hier -filter {name=~*gt64_rtm6r_support_i*gt64_rtm6r_init_i/gt0_txoutclk_out}]
#set_false_path -from [get_clocks -include_generated_clocks "drpclk_in_i"] -to [get_clocks -include_generated_clocks "gt0_txusrclk_i"]
#set_false_path -from [get_clocks -include_generated_clocks "gt0_txusrclk_i"] -to [get_clocks -include_generated_clocks "drpclk_in_i"]

create_clock -name gt1_txusrclk_i -period 6.25 [get_pins -hier -filter {name=~*gt64_rtm6r_support_i*gt64_rtm6r_init_i/gt1_txoutclk_out}]
#set_false_path -from [get_clocks -include_generated_clocks "drpclk_in_i"] -to [get_clocks -include_generated_clocks "gt1_txusrclk_i"]
#set_false_path -from [get_clocks -include_generated_clocks "gt1_txusrclk_i"] -to [get_clocks -include_generated_clocks "drpclk_in_i"]

create_clock -name gt2_txusrclk_i -period 6.25 [get_pins -hier -filter {name=~*gt64_rtm6r_support_i*gt64_rtm6r_init_i/gt2_txoutclk_out}]
#set_false_path -from [get_clocks -include_generated_clocks "drpclk_in_i"] -to [get_clocks -include_generated_clocks "gt2_txusrclk_i"]
#set_false_path -from [get_clocks -include_generated_clocks "gt2_txusrclk_i"] -to [get_clocks -include_generated_clocks "drpclk_in_i"]

create_clock -name gt3_txusrclk_i -period 6.25 [get_pins -hier -filter {name=~*gt64_rtm6r_support_i*gt64_rtm6r_init_i/gt3_txoutclk_out}]
#set_false_path -from [get_clocks -include_generated_clocks "drpclk_in_i"] -to [get_clocks -include_generated_clocks "gt3_txusrclk_i"]
#set_false_path -from [get_clocks -include_generated_clocks "gt3_txusrclk_i"] -to [get_clocks -include_generated_clocks "drpclk_in_i"]

create_clock -name gt4_txusrclk_i -period 6.25 [get_pins -hier -filter {name=~*gt64_rtm6r_support_i*gt64_rtm6r_init_i/gt4_txoutclk_out}]
#set_false_path -from [get_clocks -include_generated_clocks "drpclk_in_i"] -to [get_clocks -include_generated_clocks "gt4_txusrclk_i"]
#set_false_path -from [get_clocks -include_generated_clocks "gt4_txusrclk_i"] -to [get_clocks -include_generated_clocks "drpclk_in_i"]

create_clock -name gt5_txusrclk_i -period 6.25 [get_pins -hier -filter {name=~*gt64_rtm6r_support_i*gt64_rtm6r_init_i/gt5_txoutclk_out}]
#set_false_path -from [get_clocks -include_generated_clocks "drpclk_in_i"] -to [get_clocks -include_generated_clocks "gt5_txusrclk_i"]
#set_false_path -from [get_clocks -include_generated_clocks "gt5_txusrclk_i"] -to [get_clocks -include_generated_clocks "drpclk_in_i"]


set_false_path -to [get_pins -hierarchical -filter {NAME =~ *_txfsmresetdone_r*/CLR}]

################################# RefClk Location constraints #####################
set_property LOC AY7 [get_ports  Q0_CLK0_GTREFCLK_PAD_N_IN ] 
set_property LOC AY8 [get_ports  Q0_CLK0_GTREFCLK_PAD_P_IN ]

## LOC constrain for DRP_CLK_P/N 
## set_property LOC C25 [get_ports  DRP_CLK_IN_P]
## set_property LOC B25 [get_ports  DRP_CLK_IN_N]
 
################################# mgt wrapper constraints #####################

##---------- Set placement for gt0_gth_wrapper_i/GTHE2_CHANNEL ------
set_property LOC GTHE2_CHANNEL_X1Y0 [get_cells gt64_rtm6r_support_i/gt64_rtm6r_init_i/U0/gt64_rtm6r_i/gt0_gt64_rtm6r_i/gthe2_i]
##---------- Set placement for gt1_gth_wrapper_i/GTHE2_CHANNEL ------
set_property LOC GTHE2_CHANNEL_X1Y1 [get_cells gt64_rtm6r_support_i/gt64_rtm6r_init_i/U0/gt64_rtm6r_i/gt1_gt64_rtm6r_i/gthe2_i]
##---------- Set placement for gt2_gth_wrapper_i/GTHE2_CHANNEL ------
set_property LOC GTHE2_CHANNEL_X1Y2 [get_cells gt64_rtm6r_support_i/gt64_rtm6r_init_i/U0/gt64_rtm6r_i/gt2_gt64_rtm6r_i/gthe2_i]
##---------- Set placement for gt3_gth_wrapper_i/GTHE2_CHANNEL ------
set_property LOC GTHE2_CHANNEL_X1Y3 [get_cells gt64_rtm6r_support_i/gt64_rtm6r_init_i/U0/gt64_rtm6r_i/gt3_gt64_rtm6r_i/gthe2_i]
##---------- Set placement for gt4_gth_wrapper_i/GTHE2_CHANNEL ------
set_property LOC GTHE2_CHANNEL_X1Y4 [get_cells gt64_rtm6r_support_i/gt64_rtm6r_init_i/U0/gt64_rtm6r_i/gt4_gt64_rtm6r_i/gthe2_i]
##---------- Set placement for gt5_gth_wrapper_i/GTHE2_CHANNEL ------
set_property LOC GTHE2_CHANNEL_X1Y5 [get_cells gt64_rtm6r_support_i/gt64_rtm6r_init_i/U0/gt64_rtm6r_i/gt5_gt64_rtm6r_i/gthe2_i]

##---------- Set ASYNC_REG for flop which have async input ----------
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt0_frame_gen*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt0_frame_check*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt1_frame_gen*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt1_frame_check*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt2_frame_gen*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt2_frame_check*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt3_frame_gen*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt3_frame_check*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt4_frame_gen*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt4_frame_check*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt5_frame_gen*system_reset_r_reg}]
##set_property ASYNC_REG TRUE [get_cells -hier -filter {name=~*gt5_frame_check*system_reset_r_reg}]

##---------- Set False Path from one clock to other ----------
